{
  "id": "reserveSpotInOffice",
  "endPoints": [
    {
      "name": "worker",
      "baseUrlType": "workday-staffing",
      "url": "workers/me",
      "authType": "sso"
    },
    {
      "name": "workerSearch",
      "baseUrlType": "workday-staffing",
      "url": "workers?search=<% instanceListQuery %>",
      "exclude": "<% empty(instanceListQuery) %>",
      "authType": "sso",
      "deferred": "true"
    },
    {
      "name": "locations",
      "baseUrlType": "workday-raas",
      "url": "lmcneil/Office_Locations_Enabled_for_Return?Location_Usages_for_Location!WID=fbe0f826480e46978f80b361d35f31df&enabledForReturnForWork=1&Location_Type!WID=310065db1eea46a9ba1e4ff48a7c080d&format=json",
      "authType": "sso"
    },
    {
       "name": "locations",
       "baseUrlType": "workday-raas",
       "authType": "sso",
       "url": "/lmcneil/CRA_getAllLocations?format=json",
       "bestEffort": "true"

     },
    {
      "name": "reservations",
      "authType": "sso",
      "baseUrlType": "workday-raas",
      "url":"/lmcneil/Office_Reservation_Requests?format=json",
      "bestEffort": "true"
    }

  ],
  "script": "<% var checkAvailability = function(locationId) {
      var locationDetails = locations.Report_Entry.filter(loc => {loc.id == locationId});
      var activeReservations = reservations.Report_Entry.filter(reservation => {reservation.statusOfRequest != 'Cancelled'});
      var activeForThisLocation = activeReservations.filter(reservation => {reservation.location.id == locationDetails[0].id});
      return ((locationDetails[0].maximumOccupancy * locationDetails[0].allowedOccupancy)/100 - activeForThisLocation.size()) >= 1;
      };
    %>",
  "outboundData": {
    "outboundEndPoints": [
      {
        "name": "launchReserveSpotWorkflow",
        "baseUrlType": "workflow",
        "url": "workflows/ReserveSpotWorkflow/launch",
        "httpMethod": "POST",
        "authType": "sso",
        "onSend": "<%
          self.data;
        %>"
      }
    ],
    "responseErrorDetail": {
      "errorSummary": "<% error %>",
      "errors": "<% errors.map(item => { item.error }); %>"
    }
  },
  "presentation": {
    "title": {
      "type": "title",
      "label": "Reserve a Spot at an Office"
    },
    "headerSize": "STANDARD",
    "body": {
      "type": "section",
      "horizontal": false,
      "sorted": false,
      "children": [
        {
          "type": "instanceList",
          "searchEndPoint": "<% endpoints.workerSearch %>",
          "multiSelect": "false",
          "id": "instanceListWorkerSearch",
          "label": "Reserve spot for",
          "searchResultValues": "<% workerSearch.data %>",
          "required": "<% true %>",
          "values": "<% [worker] %>",
          "selectedValues": "<% [worker] %>",
          "valueOutBinding": "launchReserveSpotWorkflow.workerWID",
          "_comment": "Set default value at page load to the current worker. They can search for a different worker by typing in the instanceList and hitting Enter."
        },
        {
          "type": "section",
          "horizontal": false,
          "sorted": false,
          "children": [
            {
              "type": "date",
              "label": "Requested Date",
              "id": "requestedDate",
              "required": "<% true %>",
              "datePrecision": "DAY",
              "valueOutBinding": "launchReserveSpotWorkflow.requestedDate"
            },
            {
              "type": "instanceList",
              "label": "Pick a Location",
              "id": "location",
              "required": "<% true %>",
              "values": "<% locations.Report_Entry %>",
              "idKey" : "locationWID",
              "displayKey": "location",
              "valueOutBinding": "launchReserveSpotWorkflow.location"
            },
            {
              "type": "richText",
              "label": "Availability:",
              "value": "<% checkAvailability(location.value[0] ? 'AVAILABLE' : 'NOT AVAILABLE' ) %>>"
            }
          ]
        }

      ]
    }
  }
}